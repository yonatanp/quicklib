name: Quicklib CI

on:
  push:
    paths-ignore:
      - "*.md"
      - "*.rst"
      - .gitignore
  pull_request:
    types: [opened, reopened]

jobs:
  test:
    name: 'CI os=${{ matrix.os }} py=${{ matrix.python-version }}/${{ matrix.architecture}}'
    timeout-minutes: 10
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10']
        include:
          - architecture: 'x64'
          - os: windows-latest
            python-version: '3.8'
            architecture: 'x86'
          - os: ubuntu-latest
            python-version: '3.8'
            archive-artifacts: true
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
      - name: Build, install and test
        shell: bash
        run: |
          python -m pip install -U wheel PyYAML
          python setup.py sdist
          python setup.py bdist_wheel
          python setup.py install
          tests/setup_examples.sh
      - name: Archive source dist
        if: ${{ matrix.archive-artifacts }}
        uses: actions/upload-artifact@v3
        with:
          name: library_source
          path: dist/*.tar.gz
      - name: Archive binary dist
        if: ${{ matrix.archive-artifacts }}
        uses: actions/upload-artifact@v3
        with:
          name: library_binary
          path: dist/*.whl
